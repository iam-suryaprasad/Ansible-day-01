---
- name: Run AWS CLI Commands On All Servers
  hosts: pvt
  gather_facts: yes
  become: yes
  become_user: root
  serial: 3
  vars:
    user_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      31353766336266333534396461393765306163366639633034363265616532363235656666653135
      3934323966346631333632633762386531653164303865370a646130306565356264343430613039
      36376166343334366432316230626336636566313830356163376362346465643130333861613038
      6165633264323965630a316132653761626263386439383561303734613234616633366331613436
      3135

  tasks:
    - name: Install passlib on remote servers
      apt:
        name: python3-passlib
        state: present
      become: yes
      when: ansible_facts.packages['python3-passlib'] is not defined
      # Use the appropriate package manager for different OSes. Example above is for Ubuntu/Debian-based systems.

    - name: Create .aws folder
      shell: mkdir -p /root/.aws
      ignore_errors: yes

    - name: Copy Encrypted Files To /tmp
      copy:
        src: /tmp/{{ item }}  # This Encrypted File Must Be Created Prior To Running The Playbook
        dest: /tmp/{{ item }}
        owner: root
        group: root
        mode: "0600"
      with_items:
        - aws_creds
        - tls.key
        - tls.crt

    - name: Copy Encrypted Credentials File To .aws folder
      copy:
        src: /tmp/aws_creds  # This Encrypted File Must Be Created Prior To Running The Playbook
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: "0600"

    - name: Check S3 Buckets
      shell: aws s3 ls | cut -d " " -f 3
      register: buckets

    - name: Print Bucket Name
      debug:
        var: buckets

    - name: Get VPCs
      shell: aws ec2 describe-vpcs | jq ".Vpcs[].VpcId" -r
      register: vpcs

    - name: Print VPC IDs
      debug:
        var: vpcs

    - name: Create Admin Users
      user:
        name: "{{ item }}"
        state: present
        comment: Admin User "{{ item }}"
        groups: root
        shell: /bin/bash
        group: sudo
        password: "{{ '%s' | format(user_password) | regex_replace('\n', '') | password_hash('sha512') }}"
        password_expire_min: 1
      with_items:
        - Avinash
        - Saikiran
        - Gnane

    - name: Replace Password Authentication to Yes
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no"
        line: PasswordAuthentication yes
        backup: yes
      notify:
        - Restart SSH Service

  handlers:
    - name: Restart SSH Service
      shell: service sshd restart

    - name: Restart Elastic Agent
      shell: sudo heartbeat setup && sudo service heartbeat-elastic start
